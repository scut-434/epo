package com.gzgb.epo.entity;

import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.Lob;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

import com.gzgb.epo.publics.Constants;

/**
 * <pre>
 * 舆论领袖实体
 * </pre>
 * 
 * @author LiuYongbin
 * @version 1.0, 2014-2-14
 */
@Entity
@Table(name = "epo_medialeader", schema = Constants.GZGB_SCH)
@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
@SequenceGenerator(name = "gzgb_medialeader", sequenceName = "gzgb_medialeader_seq", allocationSize = 1)
public class MediaLeader extends BaseEntity {

	private static final long serialVersionUID = 995235666627631654L;

	/**
	 * 自增ID
	 */
	private Long id;

	/**
	 * 社交账号
	 */
	private String socialAccount;

	/**
	 * 所在地域
	 */

	private CityRegion regionId;

	/**
	 * 收入阶层
	 */
	private Mcode hierarchy;

	/**
	 * 政治倾向
	 */
	private Mcode political;

	/**
	 * 舆论影响力
	 */
	private Integer influence;
	
	/**
	 * 舆论领袖图片
	 */
	private byte[] image;
	
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY, generator = "gzgb_medialeader")
	@Column(name = "networkid")
	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Column(name = "socialaccount", nullable = false)
	public String getSocialAccount() {
		return socialAccount;
	}

	public void setSocialAccount(String socialAccount) {
		this.socialAccount = socialAccount;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "regionId", nullable = false)
	public CityRegion getRegionId() {
		return regionId;
	}

	public void setRegionId(CityRegion regionId) {
		this.regionId = regionId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Mcode_hierarchy", nullable = false)
	public Mcode getHierarchy() {
		return hierarchy;
	}

	public void setHierarchy(Mcode hierarchy) {
		this.hierarchy = hierarchy;
	}

	@ManyToOne(fetch=FetchType.LAZY)
	@JoinColumn(name = "Mcode_political")
	public Mcode getPolitical() {
		return political;
	}

	public void setPolitical(Mcode political) {
		this.political = political;
	}

	@Column(name = "influence",nullable = false, columnDefinition = "INT 1")
	public Integer getInfluence() {
		return influence;
	}

	public void setInfluence(Integer influence) {
		this.influence = influence;
	}

	/**
	 * @return image 
	 * @see com.gzgb.epo.entity.MediaLeader#image
	 */
	@Lob
	@Basic(fetch = FetchType.LAZY)
	public byte[] getImage() {
		return image;
	}

	/**
	 * @param image image
	 * @see com.gzgb.epo.entity.MediaLeader#image
	 */
	public void setImage(byte[] image) {
		this.image = image;
	}
	
	

}