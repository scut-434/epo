package com.gzgb.epo.controller;

import javax.servlet.http.HttpServletRequest;

import org.apache.shiro.SecurityUtils;
import org.apache.shiro.authc.AuthenticationException;
import org.apache.shiro.authc.ExcessiveAttemptsException;
import org.apache.shiro.authc.IncorrectCredentialsException;
import org.apache.shiro.authc.LockedAccountException;
import org.apache.shiro.authc.UnknownAccountException;
import org.apache.shiro.authc.UsernamePasswordToken;
import org.apache.shiro.subject.Subject;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.gzgb.epo.service.shiro.ShiroDbRealm.ShiroUser;

/**
 * 
 * <pre>
 * 登陆处理
 * </pre>
 * 
 * @author XiaoJian
 * @version 1.0, 2013-12-31
 */
@Controller
@RequestMapping("/")
public class LoginController {
	 @RequestMapping(value = "login", method = RequestMethod.POST)  
	 public String loginfail(Model model,HttpServletRequest request,String loginName,String password) {
		Subject currentUser = SecurityUtils.getSubject();  
	    String result = "login";  
        if (!currentUser.isAuthenticated()) {  
            result = login(model,currentUser,loginName,password);  
        }else{//重复登录  
            ShiroUser shiroUser = (ShiroUser) currentUser.getPrincipal();  
            if(!shiroUser.getLoginName().equalsIgnoreCase(loginName)){//如果登录名不同  
                currentUser.logout();  
        		request.getSession().invalidate(); // 销毁session
                result = login(model,currentUser,loginName,password);  
            }  
        }  
        return result; 

	}
	 
	 private String login(Model model,Subject currentUser,String username,String password){  
	        String result = "login";  
	        UsernamePasswordToken token = new UsernamePasswordToken(username,  password);  
	        token.setRememberMe(false);  
	        try {  
	            currentUser.login(token);  
	            result = "redirect:/index";  
	        } catch (UnknownAccountException uae) {  
	        	model.addAttribute("errorInfo", "未知账户");  
	            result = "login";  
	        } catch (IncorrectCredentialsException ice) {  
	        	model.addAttribute("errorInfo", "密码不正确");
	            result = "login";  
	        } catch (LockedAccountException lae) {  
	        	model.addAttribute("errorInfo", "账户已锁定");  
	            result = "login";  
	        } catch(ExcessiveAttemptsException eae){ 
	        	model.addAttribute("errorInfo", "用户名或密码错误次数过多");  
	        	result = "login";  
	        }catch (AuthenticationException ae) { 
	        	model.addAttribute("errorInfo", "用户名或密码不正确");  
	            result = "login";  
	        }  
	        return result;  
	    }  
	 
	 @RequestMapping(value = "login", method = RequestMethod.GET)  
	  public String login(){
		 ShiroUser user = (ShiroUser) SecurityUtils.getSubject().getPrincipal();
		 if(user==null){
			 return  "login";
		 }else{
			 return "redirect:/index";
		 }
	   
	  }  

	/**
	 * 退出
	 * 
	 * @param request
	 * @param model
	 * @return
	 * @throws IllegalAccessException
	 */
	@RequestMapping(value = "logout")
	public String logout(HttpServletRequest request, Model model)
			throws IllegalAccessException {
		SecurityUtils.getSubject().logout();
		try{
			request.getSession().invalidate(); // 销毁session
		}catch(Exception e){
			e.printStackTrace();
		}
		System.out.println("logout ...");
		return "redirect:/login";
	}

}
