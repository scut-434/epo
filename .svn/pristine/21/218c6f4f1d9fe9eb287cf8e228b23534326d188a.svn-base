package com.gzgb.epo.controller.leaderRecognition;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.gzgb.epo.entity.LeaderHistoryRecord;
import com.gzgb.epo.entity.LeaderInfluence;
import com.gzgb.epo.entity.MediaLeader;
import com.gzgb.epo.entity.MessageCountChange;
import com.gzgb.epo.entity.RemarkRecord;
import com.gzgb.epo.service.leaderHostoryRecord.LeaderHistoryRecordService;
import com.gzgb.epo.service.leaderInfluence.LeaderInfluenceService;
import com.gzgb.epo.service.mediaLeader.MediaLeaderService;
import com.gzgb.epo.service.messageCountChange.MessageCountChangeService;
import com.gzgb.epo.service.remarkRecord.RemarkRecordService;
import com.gzgb.epo.service.user.UserService;

/**
 * 
 * <pre>
 * 舆论领袖识别控制器
 * </pre>
 * 
 * @author XiaoJian
 * @version 1.0, 2013-12-18
 */
@Controller
@RequestMapping(value = "/leaderRecognition")
public class LeaderRecognitionController {

	@Autowired
	private UserService userService;
	@Autowired
	private LeaderHistoryRecordService lhrService;
	@Autowired
	private LeaderInfluenceService liService;
	@Autowired
	private MessageCountChangeService mccService;
	@Autowired
	private RemarkRecordService rrService;
	@Autowired
	private MediaLeaderService leaderService;
	Logger logger = LoggerFactory.getLogger(LeaderRecognitionController.class);

	/**
	 * 进入舆论领袖识别页面
	 * 
	 * @return
	 */
	@RequestMapping(value = "index")
	public String index(Model model, HttpServletRequest request) {
		List<String> accountList = new ArrayList<String>();
		List<MediaLeader> leaderList = leaderService.findAll(MediaLeader.class);
		for (MediaLeader leader : leaderList) {
			accountList.add(leader.getSocialAccount());
		}
		model.addAttribute("accountList", accountList);
		return "leaderRecognition/leaderRecognitionIndex";
	}

	/**
	 * ajax getItemList
	 * 
	 * @return
	 */
	@RequestMapping(value = "getLeaderList")
	public @ResponseBody
	Map<String, Object> getLeaderList(String socialaccount, String region,
			String income, String political, String influence, Integer page) {

		Map<String, Object> mapLong = new HashMap<String, Object>();
		Map<String, String> mapString = new HashMap<String, String>();
		if (!socialaccount.equals("全部"))
			mapString.put("socialAccount", socialaccount);
		if (!region.equals("全部"))
			mapString.put("region", region);
		if (!income.equals("全部"))
			mapString.put("income", income);
		if (!political.equals("全部"))
			mapString.put("political", political);
		if (!influence.equals("全部"))
			mapString.put("influence", influence);
		Map<String, Object> myMap = leaderService.getAll(MediaLeader.class,
				mapString, null, null, null, page, null, "socialAccount",
				"desc");
		if (page == null || page == 0) {
			page = 1;
		}
		Map<String, Object> map = new HashMap<String, Object>();
		List<Map<String, Object>> dataList = new ArrayList<Map<String, Object>>();

		// String parentName = parent.getKdlName();
		if (myMap != null && !"".equals(myMap.get("rows").toString())) {
			List<MediaLeader> list = (List<MediaLeader>) myMap.get("rows");
			for (int i = 0; i < list.size(); i++) {
				MediaLeader leader = list.get(i);
				Map<String, Object> map1 = new HashMap<String, Object>();
				map1.put("networkid", leader.getNetworkid());
				map1.put("socialaccount", leader.getSocialAccount());
				map1.put("region", leader.getRegion());
				map1.put("income", leader.getIncome());
				map1.put("political", leader.getPolitical());
				map1.put("influence", leader.getInfluence());
				map1.put("url", "/leaderRecognition/leaderDetail?networkId="
						+ leader.getNetworkid());
				dataList.add(map1);
			}
		}
		Map<String, Integer> pageList = new HashMap<String, Integer>();
		int total = (myMap == null) ? 0 : Integer.parseInt(myMap.get("total")
				.toString());
		pageList.put("size", 10); // 默认为10
		int size = 1;
		if (total > 10) {
			if (total % 10 != 0) {
				size = total / 10 + 1;
			} else {
				size = total / 10;
			}
		}
		pageList.put("count", size);
		pageList.put("current", page);
		pageList.put("total", total);

		map.put("data", dataList);
		map.put("page", pageList);
		return map;
	}

	/**
	 * 进入舆论领袖详细页面
	 * 
	 * @return
	 */
	@RequestMapping(value = "leaderDetail")
	public String leaderDetail(Model model, HttpServletRequest request,
			String networkId) {
		MediaLeader leader = leaderService.findById(Long.valueOf(networkId),
				MediaLeader.class);
		model.addAttribute("leader", leader);
		List<LeaderHistoryRecord> lhr = lhrService.findBySocialAccount(leader
				.getSocialAccount());
		List<LeaderInfluence> li = liService.findBySocialAccount(leader
				.getSocialAccount());
		List<MessageCountChange> mcc = mccService.findBySocialAccount(leader
				.getSocialAccount());
		List<RemarkRecord> rr = rrService.findBySocialAccount(leader
				.getSocialAccount());
		String fabu_X = "0:|";
		String fabu_Y = "t:";
		String zhuangzai_X = "0:|";
		String zhuangzai_Y = "t:";
		String jieceng_X = "1:|";
		String jieceng_Y = "t:";
		String region_X = "1:|";
		String region_Y = "t:";
		String xueli_X = "1:|";
		String xueli_Y = "t:";
		for (MessageCountChange MCC : mcc) {
			if ("发布".equals(MCC.getType())) {
				fabu_X += MCC.getTime() + "|";
				fabu_Y += MCC.getCount() + ",";

			} else {
				zhuangzai_X += MCC.getTime() + "|";
				zhuangzai_Y += MCC.getCount() + ",";
			}

		}
		for (LeaderInfluence influence : li) {
			if ("阶层".equals(influence.getType())) {
				jieceng_X += influence.getName() + "|";
				jieceng_Y += influence.getCount() + ",";

			} else if ("地域".equals(influence.getType())) {
				region_X += influence.getName() + "|";
				region_Y += influence.getCount() + ",";
			} else {
				xueli_X += influence.getName() + "|";
				xueli_Y += influence.getCount() + ",";
			}

		}
		fabu_X += "1:|0|50条|100条";
		zhuangzai_X += "1:|0|50条|100条";
		fabu_Y = fabu_Y.substring(0, fabu_Y.length() - 1);
		zhuangzai_Y = zhuangzai_Y.substring(0, zhuangzai_Y.length() - 1);
		jieceng_X += "0:|0|50人|100人";
		region_X += "0:|0|50人|100人";
		xueli_X += "0:|0|50人|100人";
		jieceng_Y = jieceng_Y.substring(0, jieceng_Y.length() - 1);
		xueli_Y = xueli_Y.substring(0, xueli_Y.length() - 1);
		region_Y = region_Y.substring(0, region_Y.length() - 1);
		model.addAttribute("fabu_X", fabu_X);
		model.addAttribute("fabu_Y", fabu_Y);
		model.addAttribute("zhuangzai_X", zhuangzai_X);
		model.addAttribute("zhuangzai_Y", zhuangzai_Y);
		model.addAttribute("region_X", region_X);
		model.addAttribute("region_Y", region_Y);
		model.addAttribute("jieceng_X", jieceng_X);
		model.addAttribute("jieceng_Y", jieceng_Y);
		model.addAttribute("xueli_X", xueli_X);
		model.addAttribute("xueli_Y", xueli_Y);
		model.addAttribute("li", li);
		model.addAttribute("rr", rr);
		model.addAttribute("lhr", lhr);
		return "leaderRecognition/leaderDetail";
	}

}
