package com.gzgb.epo.service.remarkRecord;

import java.util.ArrayList;
import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.gzgb.epo.dao.remakRecord.RemarkRecordDao;
import com.gzgb.epo.entity.RemarkRecord;
import com.gzgb.epo.service.base.BaseService;

/**
 * 
 * <pre>
 * 言论记录Service
 * </pre>
 * 
 * @author LiuYongbin
 * @version 1.0, 2014-2-25
 */
@Service
public class RemarkRecordService extends BaseService<RemarkRecord> {

	private static Logger logger = LoggerFactory
			.getLogger(RemarkRecordService.class);
	@Autowired
	private RemarkRecordDao rrDao;

	/**
	 * 
	 * <pre>
	 * 通过网络ID查找记录
	 * </pre>
	 * 
	 * @param NetWorkId
	 * @return
	 */
	public List<RemarkRecord> findByNetWorkId(Long id) {
		try {
			logger.info("---findByNetWorkId()方法");
			return rrDao.findByNetWorkId(id);
		} catch (Exception ex) {
			logger.error(ex.toString());
			return null;
		}

	}

	/**
	 * 
	 * <pre>
	 * 查找在特定月里面的不同的类型的数量list<正面的数量，中立的数量，负面的数量>
	 * </pre>
	 * 
	 * @param startAndEnd
	 * @return
	 */
	public List<Long> getCountListBetweenTime(List<Integer> startAndEnd, Long networkId) {
		try {
			logger.info("---getCountListBetweenTime()方法");
			List<RemarkRecord> list = rrDao.getListBetweenTime(startAndEnd, networkId);
			if(list == null || list.size() == 0)
				return null;
			else{
				long positiveCount = 0;
				long neutralCount = 0;
				long negativeCount = 0;
				for(RemarkRecord rr : list){
					if("右倾".equals(rr.getPolitical()))
						positiveCount++;
					else if("中立".equals(rr.getPolitical()))
						neutralCount++;
					else
						negativeCount++;		
				}
				List<Long> returnList = new ArrayList<Long>();
				returnList.add(positiveCount);
				returnList.add(neutralCount);
				returnList.add(negativeCount);
				return returnList;
			}
		} catch (Exception ex) {
			logger.error(ex.toString());
			return null;
		}

	}

}
