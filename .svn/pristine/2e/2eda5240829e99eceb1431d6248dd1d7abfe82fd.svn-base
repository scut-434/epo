package com.gzgb.epo.controller.warning;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.gzgb.epo.entity.SensitiveList;
import com.gzgb.epo.service.warning.SensitiveListService;
import com.gzgb.epo.util.DateUtil;

/**
 * 
 * <pre>
 * 敏感信息控制器
 * </pre>
 * @author XiaoJian
 * @version 1.0, 2014-3-1
 */
@Controller
@RequestMapping(value = "/sensitive")
public class SensitiveController {
	
	@Autowired
	private SensitiveListService sensitiveListService;
	Logger logger = LoggerFactory.getLogger(BlogController.class);
	
	@SuppressWarnings("unchecked")
	@RequestMapping(value = "sensitiveList")
	public @ResponseBody
	Map<String, Object> sensitiveList(HttpServletRequest request, String content,
			String start, String end, Integer sortOrder, Integer wsmId,
			Integer page) {
		if (page == null || page == 0) {
			page = 1;
		}
		Long a = DateUtil.parseSimpleDate(start).getTime() / 1000;
		Long b = DateUtil.parseSimpleDate(end).getTime() / 1000;
		int startTime = a.intValue();
		int endTime = b.intValue();

		Map<String, Object> myMap = null;
		if (sortOrder == 0) {
			// 按时间 升序排序
			myMap = sensitiveListService.findSensitive(startTime, endTime, wsmId,
					content, page, null, "jslTimestamp", "asc");
		} else {
			// 默认按热度降序排列
			myMap = sensitiveListService.findSensitive(startTime, endTime, wsmId,
					content, page, null, null, null);
		}
		
		Map<String, Object> map = new HashMap<String, Object>();
		List<Map<String, Object>> dataList = new ArrayList<Map<String, Object>>();
		if (myMap != null && !"".equals(myMap.get("rows").toString())) {
			List<SensitiveList> list = (List<SensitiveList>) myMap.get("rows");
			for (int i = 0; i < list.size(); i++) {
				SensitiveList sensitiveList = list.get(i);
				Map<String, Object> inMap = new HashMap<String, Object>();
				inMap.put("url", sensitiveList.getJslSourceUrl());
				inMap.put("title", sensitiveList.getJslTitle());
				inMap.put("sensitivity", sensitiveList.getJslSensitivity());
				Long time = Long.parseLong(sensitiveList.getJslUpdateTime().toString()) * 1000;
				SimpleDateFormat f = new SimpleDateFormat("yyyy-MM-dd HH:mm"); // 格式化日期
				inMap.put("updatetime", f.format(new Date(time)));
				String sourceType = "";
				switch (sensitiveList.getJslSourceType()) {
				case 1:
					sourceType = "新闻";
					break;
				case 2:
					sourceType = "评论";
					break;
				case 3:
					sourceType = "微博";
					break;
				case 4:
					sourceType = "论坛";
					break;
				case 5:
					sourceType = "博客";
					break;
				default:
					break;
				}
				inMap.put("sourceType", sourceType);
				time = Long.parseLong(sensitiveList.getJslTimestamp().toString()) * 1000;
				f = new SimpleDateFormat("yyyy-MM-dd HH:mm"); // 格式化日期
				inMap.put("date", f.format(new Date(time)));
				inMap.put("updateUrl", sensitiveList.getJslSourceUrl());

				dataList.add(inMap);
			}
		}
		Map<String, Object> pageList = new HashMap<String, Object>();
		int total = (myMap == null) ? 0 : Integer.parseInt(myMap.get("total")
				.toString());
		pageList.put("size", 20); // 默认为20
		int size = 1;
		if (total > 20) {
			if (total % 20 != 0) {
				size = total / 20 + 1;
			} else {
				size = total / 20;
			}
		}
		pageList.put("count", size);
		pageList.put("current", page);
		pageList.put("total", total);

		map.put("data", dataList);
		map.put("page", pageList);
		return map;
	}

	@RequestMapping(value = "sensitiveIndex")
	public @ResponseBody
	Map<String, Object> sensitiveIndex(HttpServletRequest request,
			Integer day, Integer type) {
		Map<String, Object> dataList = new HashMap<String, Object>();
		Map<String, Object> map = new HashMap<String, Object>();
		if (day != null) {
			Long a = DateUtil.parseSimpleDate("2013-4-8").getTime() / 1000;
			// Long a = new Date().getTime()/1000;
			Long b = a - day * 3600 * 24;
			int startTime = b.intValue();
			int endTime = a.intValue();
			dataList = sensitiveListService
					.findSensitiveTop10(startTime, endTime, type);
		}
		
		return dataList;
	}
	
	/**
	 * 
	 * <pre>
	 * 更新敏感信息
	 * </pre>
	 * @param request
	 * @param id 敏感信息ID
	 * @param jslLevel 级别
	 * @param jslNature 性质
	 * @param jslProposal 值班意见
	 * @return
	 */
	@RequestMapping(value = "update")
	public @ResponseBody
	String update(HttpServletRequest request,Long id,
			Byte jslLevel, Integer jslNature, String jslProposal) {

		if(id!=null){
			SensitiveList sensitiveList = sensitiveListService.findById(id, SensitiveList.class);
			sensitiveList.setJslLevel(jslLevel);
			sensitiveList.setJslNature(jslNature);
			sensitiveList.setJslProposal(jslProposal);
			sensitiveListService.update(sensitiveList);
		}
		return "";
	}

}
