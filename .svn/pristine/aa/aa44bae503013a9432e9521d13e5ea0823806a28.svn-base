package com.gzgb.epo.entity;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

import com.gzgb.epo.publics.Constants;

/**
 * 
 * <pre>
 * 涉穗报道区域分布
 * </pre>
 * 
 * @author LiuYongbin
 * @version 1.0, 2014-2-26
 */
@Entity
@Table(name = "epo_reportdistribution", schema = Constants.GZGB_SCH)
@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
@SequenceGenerator(name = "gzgb_reportDistribution", sequenceName = "gzgb_reportDistribution_seq", allocationSize = 1)
public class ReportDistribution extends BaseEntity {

	private static final long serialVersionUID = 994333609827631654L;

	/**
	 * 自增id
	 */
	private Long id;

	/**
	 * 区域所属Id
	 */
	private CityRegion cityRegionId;

	/**
	 * 报道的数量
	 */
	private Long reportCount;

	/**
	 * 报道的情感倾向：  1    代表喜欢	  2	代表中立 		3 ：代表讨厌
	 */
	private Mcode reportEmotion;

	/**
	 * 报道的政治倾向         1    代表右倾  		2  代表中立 		3 ：代表左倾
	 */
	private Mcode reportPolitical;
	
	 /**
     * 是否涉穂  默认为1
     * 1：表示涉穂		0：表示不涉穂
     */
    
    private Integer isAbout;
	

	/**
	 * 时间
	 */
	private Integer time;
	
	/**
	 * @return id
	 * @see com.gzgb.epo.entity.ReportDistribution#id
	 */
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY, generator = "gzgb_reportDistribution")
	public Long getId() {
		return id;
	}

	/**
	 * @param id
	 *            id
	 * @see com.gzgb.epo.entity.ReportDistribution#id
	 */
	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cityRegionId", nullable = false)
	public CityRegion getCityRegionId() {
		return cityRegionId;
	}

	public void setCityRegionId(CityRegion cityRegionId) {
		this.cityRegionId = cityRegionId;
	}

	@Column(name = "reportcount", nullable = false)
	public Long getReportCount() {
		return reportCount;
	}

	public void setReportCount(Long reportCount) {
		this.reportCount = reportCount;
	}

	@ManyToOne(fetch=FetchType.LAZY)
	@JoinColumn(name = "mcode_reportemotion", nullable = false)
	public Mcode getReportEmotion() {
		return reportEmotion;
	}

	public void setReportEmotion(Mcode reportEmotion) {
		this.reportEmotion = reportEmotion;
	}

	@ManyToOne(fetch=FetchType.LAZY)
	@JoinColumn(name = "mcode_reportPolitical", nullable = false)
	public Mcode getReportPolitical() {
		return reportPolitical;
	}

	public void setReportPolitical(Mcode reportPolitical) {
		this.reportPolitical = reportPolitical;
	}

	
	
	@Column(name = "isabout", nullable = false, columnDefinition = "INT default 1")
	public Integer getIsAbout() {
		return isAbout;
	}

	public void setIsAbout(Integer isAbout) {
		this.isAbout = isAbout;
	}

	@Column(name = "time", nullable = false)
	public Integer getTime() {
		return time;
	}

	public void setTime(Integer time) {
		this.time = time;
	}

	
}
